declare module "*.json";
declare module "webpack-cli";

// Deprecated NodeJS API usages in Webpack
declare namespace NodeJS {
	interface Process {
		binding(internalModule: string): any;
	}
}

// Generated by tsc. Must go once https://github.com/samccone/chrome-trace-event/pull/4 is merged
declare module 'chrome-trace-event' {
	/// <reference types="node" />
	/**
	 * trace-event - A library to create a trace of your node app per
	 * Google's Trace Event format:
	 * // JSSTYLED
	 *      https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU
	 */
	import { Readable as ReadableStream } from "stream";
	export interface Event {
		ts: number;
		pid: number;
		tid: number;
		/** event phase */
		ph?: string;
		[otherData: string]: any;
	}
	export interface Fields {
		cat?: any;
		args?: any;
		[filedName: string]: any;
	}
	export interface TracerOptions {
		parent?: Tracer | null;
		fields?: Fields | null;
		objectMode?: boolean | null;
		noStream?: boolean;
	}
	export class Tracer extends ReadableStream {
		private _objectMode;
		/** Node Stream internal APIs */
		private _push;
		private firstPush?;
		private noStream;
		private events;
		private parent;
		private fields;
		constructor(opts?: TracerOptions);
		/**
		 * If in no streamMode in order to flush out the trace
		 * you need to call flush.
		 */
		flush(): void;
		_read(size: number): void;
		private _pushString(ev);
		child(fields: Fields): Tracer;
		begin(fields: Fields): void;
		end(fields: Fields): void;
		completeEvent(fields: Fields): void;
		instantEvent(fields: Fields): void;
		mkEventFunc(ph: string): (fields: Fields) => void;
	}

}
/**
 * Global variable declarations
 * @todo Once this issue is resolved, remove these globals and add JSDoc onsite instead
 * https://github.com/Microsoft/TypeScript/issues/15626
 */
declare const $hash$;
declare const $requestTimeout$;
declare const installedModules;
declare const $require$;
declare const hotDownloadManifest;
declare const hotDownloadUpdateChunk;
declare const hotDisposeChunk;
declare const modules;
declare const installedChunks;
declare const hotAddUpdateChunk;
declare const parentHotUpdateCallback;
declare const $hotChunkFilename$;
declare const $hotMainFilename$;
declare const WebAssembly;
declare const importScripts;
declare const $crossOriginLoading$;
declare const chunkId;
